<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Budget - FinTracker</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">
</head>
<body class="bg-gray-50">
    <!-- Navigation -->
    <nav class="bg-white shadow-sm border-b">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between h-16">
                <div class="flex items-center">
                    <a href="/dashboard" class="text-xl font-bold text-blue-600">FinTracker</a>
                </div>
                <div class="flex items-center space-x-4">
                    <span class="text-gray-700">Welcome, <%= user.fullname %></span>
                    <a href="/profile" class="text-blue-600 hover:text-blue-800">Profile</a>
                    <a href="/logout" class="bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600">Logout</a>
                </div>
            </div>
        </div>
    </nav>

    <div class="flex">
        <!-- Sidebar -->
        <aside class="w-64 bg-white shadow-sm h-screen sticky top-0">
            <div class="p-6">
                <nav class="space-y-2">
                    <a href="/dashboard" class="flex items-center px-4 py-2 text-gray-700 hover:bg-gray-100 rounded-lg">
                        <i class="fas fa-chart-line w-5 h-5 mr-3"></i>
                        Dashboard
                    </a>
                    <a href="/transaction" class="flex items-center px-4 py-2 text-gray-700 hover:bg-gray-100 rounded-lg">
                        <i class="fas fa-exchange-alt w-5 h-5 mr-3"></i>
                        Transactions
                    </a>
                    <a href="/category" class="flex items-center px-4 py-2 text-gray-700 hover:bg-gray-100 rounded-lg">
                        <i class="fas fa-tags w-5 h-5 mr-3"></i>
                        Categories
                    </a>
                    <a href="/budget" class="flex items-center px-4 py-2 text-blue-600 bg-blue-50 rounded-lg">
                        <i class="fas fa-wallet w-5 h-5 mr-3"></i>
                        Budget
                    </a>
                    <a href="/goal" class="flex items-center px-4 py-2 text-gray-700 hover:bg-gray-100 rounded-lg">
                        <i class="fas fa-bullseye w-5 h-5 mr-3"></i>
                        Goals
                    </a>
                </nav>
            </div>
        </aside>

        <!-- Main Content -->
        <main class="flex-1 p-6">
            <!-- Header -->
            <div class="flex justify-between items-center mb-6">
                <div>
                    <h1 class="text-3xl font-bold text-gray-900">Budget Management</h1>
                    <p class="text-gray-600">Plan and track your spending limits</p>
                </div>
                <button onclick="openModal()" class="bg-blue-600 text-white px-4 py-2 rounded-lg hover:bg-blue-700 flex items-center space-x-2">
                    <i class="fas fa-plus"></i>
                    <span>Create Budget</span>
                </button>
            </div>

            <!-- Budget Overview -->
            <div class="grid grid-cols-1 md:grid-cols-3 gap-6 mb-6">
                <div class="bg-white p-6 rounded-lg shadow">
                    <div class="flex items-center">
                        <div class="p-2 bg-blue-100 rounded-lg">
                            <i class="fas fa-wallet text-blue-600"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm text-gray-600">Total Budget</p>
                            <p class="text-2xl font-semibold text-gray-900">$5,000</p>
                        </div>
                    </div>
                </div>
                <div class="bg-white p-6 rounded-lg shadow">
                    <div class="flex items-center">
                        <div class="p-2 bg-green-100 rounded-lg">
                            <i class="fas fa-check text-green-600"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm text-gray-600">Remaining</p>
                            <p class="text-2xl font-semibold text-gray-900">$2,150</p>
                        </div>
                    </div>
                </div>
                <div class="bg-white p-6 rounded-lg shadow">
                    <div class="flex items-center">
                        <div class="p-2 bg-red-100 rounded-lg">
                            <i class="fas fa-exclamation text-red-600"></i>
                        </div>
                        <div class="ml-4">
                            <p class="text-sm text-gray-600">Spent</p>
                            <p class="text-2xl font-semibold text-gray-900">$2,850</p>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Budget List -->
            <div class="bg-white rounded-lg shadow">
                <div class="p-6 border-b">
                    <h2 class="text-xl font-semibold text-gray-900">Active Budgets</h2>
                </div>
                <div class="p-6">
                    <div class="space-y-4">
                        <div id="budgetsContainer" class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4">
                            <p class="text-gray-500">Loading budgets...</p>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div>

    <!-- Create Budget Modal -->
    <div id="budgetModal" class="fixed inset-0 bg-gray-600 bg-opacity-50 hidden z-50">
        <div class="flex items-center justify-center min-h-screen p-4">
            <div class="bg-white rounded-lg shadow-xl max-w-md w-full">
                <div class="p-6">
                    <div class="flex justify-between items-center mb-4">
                        <h3 class="text-lg font-semibold text-gray-900">Create New Budget</h3>
                        <button onclick="closeModal()" class="text-gray-400 hover:text-gray-600">
                            <i class="fas fa-times"></i>
                        </button>
                    </div>
                    <form id="budgetForm">
                        <div class="mb-4">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Budget Name</label>
                            <input type="text" name="name" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="Enter budget name" required>
                        </div>
                        <div class="mb-4">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Description</label>
                            <textarea name="description" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" rows="3" placeholder="Enter description"></textarea>
                        </div>
                        <div class="mb-4">
                            <label class="block text-sm font-medium text-gray-700 mb-2">Amount</label>
                            <input type="number" name="amount" step="0.01" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" placeholder="0.00" required>
                        </div>
                        <div class="grid grid-cols-2 gap-4 mb-4">
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">Start Date</label>
                                <input type="date" name="startDate" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                            </div>
                            <div>
                                <label class="block text-sm font-medium text-gray-700 mb-2">End Date</label>
                                <input type="date" name="endDate" class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500" required>
                            </div>
                        </div>
                        <div class="flex justify-end space-x-3">
                            <button type="button" onclick="closeModal()" class="px-4 py-2 text-gray-600 border border-gray-300 rounded-lg hover:bg-gray-50">
                                Cancel
                            </button>
                            <button type="submit" class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700">
                                Create Budget
                            </button>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script>
        let budgets = [];

        document.addEventListener('DOMContentLoaded', loadBudgets);

        async function loadBudgets() {
            try {
                const response = await fetch('/api/budget');
                budgets = await response.json();
                renderBudgets();
            } catch (error) {
                console.error('Error loading budgets:', error);
                document.getElementById('budgetsContainer').innerHTML = '<p class="text-red-500">Error loading budgets</p>';
            }
        }

        function renderBudgets() {
            const container = document.getElementById('budgetsContainer');
            
            if (budgets.length === 0) {
                container.innerHTML = '<p class="text-gray-500">No budgets found. Create your first budget!</p>';
                return;
            }

            container.innerHTML = budgets.map(budget => {
                const startDate = new Date(budget.startDate).toLocaleDateString();
                const endDate = new Date(budget.endDate).toLocaleDateString();
                const isActive = new Date() <= new Date(budget.endDate);
                const statusClass = isActive ? 'bg-green-100 text-green-800' : 'bg-gray-100 text-gray-800';
                const statusText = isActive ? 'Active' : 'Expired';

                return `
                    <div class="bg-white border rounded-lg p-6 shadow-sm hover:shadow-md transition-shadow">
                        <div class="flex justify-between items-start mb-4">
                            <div>
                                <h3 class="font-semibold text-gray-900 text-lg">${budget.name}</h3>
                                <p class="text-sm text-gray-600">${budget.description || 'No description'}</p>
                            </div>
                            <span class="${statusClass} text-xs px-2 py-1 rounded-full">${statusText}</span>
                        </div>
                        <div class="space-y-2">
                            <div class="flex justify-between">
                                <span class="text-sm text-gray-600">Budget Amount:</span>
                                <span class="font-semibold text-blue-600">$${parseFloat(budget.amount).toFixed(2)}</span>
                            </div>
                            <div class="flex justify-between">
                                <span class="text-sm text-gray-600">Period:</span>
                                <span class="text-sm">${startDate} - ${endDate}</span>
                            </div>
                        </div>
                        <div class="flex justify-end space-x-2 mt-4 pt-4 border-t">
                            <button onclick="deleteBudget(${budget.id})" class="text-red-600 hover:text-red-800 text-sm">
                                <i class="fas fa-trash mr-1"></i>Delete
                            </button>
                        </div>
                    </div>
                `;
            }).join('');
        }

        function openModal() {
            document.getElementById('budgetForm').reset();
            document.getElementById('budgetModal').classList.remove('hidden');
        }
        
        function closeModal() {
            document.getElementById('budgetModal').classList.add('hidden');
        }

        async function deleteBudget(id) {
            if (confirm('Are you sure you want to delete this budget?')) {
                try {
                    await fetch(`/api/budget/${id}`, { method: 'DELETE' });
                    loadBudgets();
                } catch (error) {
                    console.error('Error deleting budget:', error);
                }
            }
        }

        document.getElementById('budgetForm').addEventListener('submit', async (e) => {
            e.preventDefault();
            
            const formData = new FormData(e.target);
            const data = {
                name: formData.get('name'),
                description: formData.get('description'),
                amount: formData.get('amount'),
                startDate: formData.get('startDate'),
                endDate: formData.get('endDate')
            };

            try {
                const response = await fetch('/api/budget', {
                    method: 'POST',
                    headers: { 'Content-Type': 'application/json' },
                    body: JSON.stringify(data)
                });

                if (response.ok) {
                    closeModal();
                    loadBudgets();
                } else {
                    const result = await response.json();
                    alert('Error: ' + (result.error || 'Failed to create budget'));
                }
            } catch (error) {
                console.error('Error saving budget:', error);
                alert('Network error: ' + error.message);
            }
        });
        
        // Close modal when clicking outside
        document.getElementById('budgetModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeModal();
            }
        });
    </script>
</body>
</html>